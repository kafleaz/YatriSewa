@model IEnumerable<YatriSewa.Models.Bus>

@{
    ViewData["Title"] = "ListBus";
    Layout = "~/Views/Shared/_OperatorLayout.cshtml";
}

<h3>List of All Buses for <span class="text-success">@ViewBag.CompanyName</span></h3>
<p>
    <a asp-controller="Operator" asp-action="AddBus">Create New</a>
</p>
<div class="table-responsive">
    <table id="busTable" class="table table-bordered table-hover">
        <thead class="table-primary">

        <tr>

            <th onclick="sortTable(0)" style="cursor:pointer;">
                @* @Html.DisplayNameFor(model => model.First().BusName) *@
                Bus Name
            </th>

            <th onclick="sortTable(1)" style="cursor:pointer;">
                @* @Html.DisplayNameFor(model => model.BusNumber) *@
                Bus Number
            </th>
            <th onclick="sortTable(2)" style="cursor:pointer;">
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th onclick="sortTable(3)" style="cursor:pointer;">
                @* @Html.DisplayNameFor(model => model.SeatCapacity) *@
                Seat
            </th>
            <th onclick="sortTable(4)" style="cursor:pointer;">
                @Html.DisplayNameFor(model => model.Price)
            </th>
@*             <th onclick="sortTable(5)" style="cursor:pointer;">
                @Html.DisplayNameFor(model => model.BusCompany)
            </th> *@
            <th onclick="sortTable(5)" style="cursor:pointer;">
                @Html.DisplayNameFor(model => model.Route)
            </th>
            <th onclick="sortTable(6)" style="cursor:pointer;">
                 @* @Html.DisplayNameFor(model => model.BusDriver) *@
                 Bus Driver
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BusName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BusNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SeatCapacity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
@*                 <td>
                    @Html.DisplayFor(modelItem => item.BusCompany.CompanyName)
                </td> *@
                <td>
                    <!-- Display concatenated RouteDescription -->
                    @if (item.Route != null)
                    {
                        string stops = string.Join(", ", item.Route.Stops);
                        @($"{item.Route.StartLocation} - {stops} - {item.Route.EndLocation}")
                    }
                    else
                    {
                        <text><span class="text-danger">No Route Assigned</span></text>
                    }
                </td>
                <td>
                    @if (item.BusDriver != null)
                    {
                        @Html.DisplayFor(modelItem => item.BusDriver.DriverName)
                    }
                    else
                    {
                        <text><span class="text-danger">No Driver Assigned</span></text>
                    }
                    @* @Html.DisplayFor(modelItem => item.BusDriver.DriverName) *@
                </td>
                <td>
                    <a asp-action="EditBus" asp-route-id="@item.BusId">Edit</a> |
                    <a asp-action="BusDetails" asp-route-id="@item.BusId">Details</a> |
                    <a asp-action="DeleteBus" asp-route-id="@item.BusId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>

    <script>
        function sortTable(columnIndex) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("busTable");  // Ensure this references the correct table ID
            switching = true;
            // Set the sorting direction to ascending:
            dir = "asc";
            // Make a loop that will continue until no switching has been done:
            while (switching) {
                switching = false;
                rows = table.rows;
                // Loop through all table rows (except the first, which contains the headers):
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    // Get the two elements to compare, one from current row and the next:
                    x = rows[i].getElementsByTagName("TD")[columnIndex];
                    y = rows[i + 1].getElementsByTagName("TD")[columnIndex];
                    // Check if the two rows should switch place, based on the direction, asc or desc:
                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    // Perform the switch:
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                } else {
                    // If no switching has been done AND the direction is "asc", set the direction to "desc" and run the loop again.
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }
    </script>
